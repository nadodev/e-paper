Você está desenvolvendo um projeto que requer a construção de um front-end utilizando Next.js e TypeScript, com as seguintes especificações:

### Requisitos do Front-End:
1. **Framework**: Utilizar **Next.js** para desenvolver o front-end e a API interna.
2. **Estilização**: Implementar o design com **shadcn-ui** e **Tailwind CSS**, seguindo fielmente o protótipo no Figma.
3. **Linguagem**: Desenvolver em **TypeScript** para segurança e tipagem no código.
4. **Funcionalidades**:
   - Criar e estilizar todas as telas e componentes exatamente como no design do Figma.
   - Implementar responsividade e animações ou transições especificadas no protótipo.

### API para o Front-End:
1. **Construção de API**: Criar uma **API interna no Next.js** para suportar as operações do front-end, como busca e atualização de dados.
2. **Banco de Dados**:
   - Usar **Prisma** como ORM para comunicação com o banco de dados.
   - Garantir consistência e eficiência no fluxo de dados.
3. **Comunicação Front e API**: Implementar **ts-rest** para garantir a comunicação tipada entre o front-end e a API.

### Critérios de Avaliação:
1. **Fidelidade ao Design**: A interface deve replicar fielmente o design do Figma.
2. **Funcionalidade Completa**: O front-end e a API interna devem estar conectados e funcionando corretamente.
3. **Código Limpo**: O código deve ser organizado e bem documentado. Os commits devem ser claros e autoexplicativos.
4. **Boas Práticas**: Demonstrar familiaridade com **Prisma** e **TypeScript**, implementando boas práticas de desenvolvimento.

### Entrega Final:
1. **Link do Deploy**: Disponibilizar o projeto em uma plataforma como **Vercel** ou **Netlify**.
2. **Repositório GitHub**: Fornecer o link do repositório com:
   - Código-fonte completo.
   - Instruções claras no arquivo `README.md` para instalação e execução local.

### Prazo:
Entrega até **17/11/2024, às 23:59**. Certifique-se de que a aplicação esteja funcional no link de deploy e que o repositório contenha histórico de commits e documentação adequada.

